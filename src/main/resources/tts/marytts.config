# big config file
# combined from marybase.config, en.config, voice.config
# be aware that some keys appear in more than one
# config file! also, name must be set to the name of
# the voice.

name = cmu-slt-hsmm
locale = en_US

en.version = 5.0.0

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement marytts.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        marytts.modules.Synthesis \
        marytts.modules.TextToMaryXML \
        marytts.modules.SableParser \
        marytts.modules.SSMLParser \
        marytts.modules.APMLParser \
        marytts.modules.EmotionmlParser \
        marytts.modules.JTokeniser \
        marytts.modules.DummyTokens2Words \
        marytts.modules.ProsodyGeneric \
        marytts.modules.PronunciationModel \
        marytts.modules.TargetFeatureLister \
        marytts.modules.HalfPhoneTargetFeatureLister \
        marytts.modules.AcousticModeller \
        marytts.modules.RealisedAcoustparamsExtractor \
        marytts.modules.RealisedDurationsExtractor \
        marytts.modules.HTSEngine \
        marytts.modules.PraatTextGridGenerator \
        marytts.modules.FreeTTS2FestivalUtt \
        marytts.language.en.JTokeniser \
        marytts.language.en.FreeTTSTokenToWords \
        marytts.modules.JPhonemiser(en_US.) \
        marytts.modules.JPhonemiser(en_GB.)  \
        marytts.language.en.Prosody \
        marytts.modules.SimplePhoneme2AP(en_US) \
        marytts.language.en.Utt2XMLWordsEn \
        marytts.language.en.XML2UttTokensEn \
        marytts.language.en.PronunciationModel \
        marytts.modules.OpenNLPPosTagger(en,en.pos) \



####################################################################
####################### Module settings  ###########################
####################################################################

en_US.allophoneset = jar:/marytts/language/en_US/lexicon/allophones.en_US.xml
en_US.userdict = MARY_BASE/user-dictionaries/userdict-en_US.txt
en_US.lexicon = jar:/marytts/language/en_US/lexicon/cmudict.fst
en_US.lettertosound = jar:/marytts/language/en_US/lexicon/cmudict.lts

en_GB.allophoneset = jar:/marytts/language/en_GB/lexicon/allophones.en_GB.xml
en_GB.userdict = MARY_BASE/user-dictionaries/userdict-en_GB.txt
en_GB.lexicon = jar:/marytts/language/en_GB/lexicon/en_GB_lexicon.fst
en_GB.lettertosound = jar:/marytts/language/en_GB/lexicon/en_GB.lts

en.pos.model = jar:/marytts/language/en/tagger/en-pos-maxent.bin
#en.pos.posMap = MARY_BASE/lib/modules/en/tagger/posMap.txt


en.prosody.paragraphdeclination = true
# rules for prediction of ToBI tones
en.prosody.tobipredparams = jar:/marytts/language/en/prosody/tobipredparams_english.xml
# rules for accent priorities of pos
en.prosody.accentPriorities = jar:/marytts/language/en/prosody/POSAccentPriorities.en.properties
# copy the word accents to the first accented syllable
en.prosody.syllableaccents = true


# en_US feature processor manager
featuremanager.classes.list = marytts.features.FeatureProcessorManager(en_US) \
        marytts.features.FeatureProcessorManager(en_GB)


##########################################################################
# Copyright (C) 2006,2009 DFKI GmbH.
# All rights reserved. Use is subject to license terms.
#
# Permission is hereby granted, free of charge, to use and distribute
# this software and its documentation without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of this work, and to
# permit persons to whom this work is furnished to do so, subject to
# the following conditions:
# 
#  1. The code must retain the above copyright notice, this list of
#     conditions and the following disclaimer.
#  2. Any modifications must be clearly marked as such.
#  3. Original authors' names are not deleted.
#  4. The authors' names are not used to endorse or promote products
#     derived from this software without specific prior written
#     permission.
# 
# DFKI GMBH AND THE CONTRIBUTORS TO THIS WORK DISCLAIM ALL WARRANTIES WITH 
# REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL DFKI GMBH NOR THE 
# CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR 
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
# ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF 
# THIS SOFTWARE.
##########################################################################
# MARY TTS configuration file.
##########################################################################

marybase.version = 4.3.0

# Declare "group names" as component that other components can require.
# These correspond to abstract "groups" of which this component is an instance.
#provides = \
#    group-name-1 \
#    group-name-2

# List the dependencies, as a whitespace-separated list.
# We can require a component by name or by an abstract "group name" 
# as listed under the "provides" element.
#requires = \
#    module-name-1 \
#    group-name-2

requires = a-language
   
# For each required component, an optional minimum version and an optional
# download url can be given.
# requires.module-name-1.version = 4.3.0
# requires.module-name-1.download = http://mary.dfki.de/download/mary-install-3.x.x.jar

#requires.a-language.download = http://mary.dfki.de/download/mary-install-4.x.x.jar
#requires.a-language.download.package-name = english

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.

# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement marytts.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        marytts.modules.Synthesis \
        marytts.modules.TextToMaryXML \
        marytts.modules.SableParser \
        marytts.modules.SSMLParser \
        marytts.modules.APMLParser \
        marytts.modules.EmotionmlParser \
        marytts.modules.JTokeniser \
        marytts.modules.DummyTokens2Words \
        marytts.modules.ProsodyGeneric \
        marytts.modules.PronunciationModel \
        marytts.modules.TargetFeatureLister \
        marytts.modules.HalfPhoneTargetFeatureLister \
        marytts.modules.AcousticModeller \
        marytts.modules.RealisedAcoustparamsExtractor \
        marytts.modules.RealisedDurationsExtractor \
        marytts.modules.HTSEngine \
        marytts.modules.PraatTextGridGenerator \
        marytts.modules.FreeTTS2FestivalUtt \
        marytts.language.en.JTokeniser \
        marytts.language.en.FreeTTSTokenToWords \
        marytts.modules.JPhonemiser(en_US.) \
        marytts.modules.JPhonemiser(en_GB.)  \
        marytts.language.en.Prosody \
        marytts.modules.SimplePhoneme2AP(en_US) \
        marytts.language.en.Utt2XMLWordsEn \
        marytts.language.en.XML2UttTokensEn \
        marytts.language.en.PronunciationModel \
        marytts.modules.OpenNLPPosTagger(en,en.pos) \

# modules.classes.list = \
#         marytts.modules.Synthesis \
#         marytts.modules.TextToMaryXML \
#         marytts.modules.SableParser \
#         marytts.modules.SSMLParser \
#         marytts.modules.APMLParser \
#         marytts.modules.EmotionmlParser \
#         marytts.modules.JTokeniser \
#         marytts.modules.DummyTokens2Words \
#         marytts.modules.ProsodyGeneric \
#         marytts.modules.PronunciationModel \
#         marytts.modules.TargetFeatureLister \
#         marytts.modules.HalfPhoneTargetFeatureLister \
#         marytts.modules.AcousticModeller \
#         marytts.modules.RealisedAcoustparamsExtractor \
#         marytts.modules.RealisedDurationsExtractor \
#         marytts.modules.HTSEngine \
#         marytts.modules.PraatTextGridGenerator
#         marytts.modules.FreeTTS2FestivalUtt \

# Optionally, one component can request a module declared in another module
# to be ignored. This can make sense if the component provides a better
# version of the same functionality as some base implementation.
# ignore.modules.classes.list = \
#         marytts.modules.SomeBasicModule \
#         marytts.modules.AnotherBasicModule


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement marytts.modules.synthesis.WaveformSynthesizer.

synthesizers.classes.list = \
        marytts.unitselection.UnitSelectionSynthesizer \
        marytts.modules.synthesis.HMMSynthesizer \

# Java classes to use as the audio effects post-processors, as a whitespace-separated list.
# These have to implement marytts.signalproc.effects.AudioEffect


audioeffects.classes.list = \
        marytts.signalproc.effects.VolumeEffect \
        marytts.signalproc.effects.VocalTractLinearScalerEffect \
        marytts.signalproc.effects.HMMF0ScaleEffect \
        marytts.signalproc.effects.HMMF0AddEffect \
        marytts.signalproc.effects.HMMDurationScaleEffect \
        marytts.signalproc.effects.RobotiserEffect \
        marytts.signalproc.effects.LpcWhisperiserEffect \
        marytts.signalproc.effects.StadiumEffect \
        marytts.signalproc.effects.ChorusEffectBase \
        marytts.signalproc.effects.FilterEffectBase \
        marytts.signalproc.effects.JetPilotEffect


# Feature processor managers
# (empty list)
# Language packs must add one each to this list, e.g.:
#   featuremanager.classes.list = marytts.features.FeatureProcessorManager(en_GB)
# or a custom class such as:
#   featuremanager.classes.list = marytts.language.en.gb.features.FeatureProcessorManager
# Voice-specific feature processor managers, if any, are defined
# in voice.<voicename>.featuremanager.


####################################################################
####################### Global settings  ###########################
####################################################################

# Type of server? (socket/http/commandline)
server = http
server.http.parallelthreads = 6

# server socket port:
socket.port = 59125

# module timeout (in milliseconds):
modules.timeout = 60000

# Perform a power-on self test for each module:
# auto (true in server mode, false in command-line mode)
# true
# false
modules.poweronselftest = auto

# Cache synthesis results
# true | false
cache = false
cache.file = MARY_BASE/tmp/cache
cache.clearOnStart = false

# If less than the following number of bytes can be allocated, report
# a low memory condition which may affect system behaviour.
mary.lowmemory = 20000000

# Whether to validate MaryXML module output
# (only useful for debugging):
maryxml.validate.modules = false

# Whether to validate MaryXML input:
maryxml.validate.input = true

# Config file for log4j logging system:
# (use a filesystem path as follows):
# log.config = MARY_BASE/conf/log4j.properties
# log.config = /path/to/my/log4j.properties
log.config = jar:/marytts/util/log4j.properties

####################################################################
####################### Module settings  ###########################
####################################################################

# When converting plain text into RAWMARYXML, split into paragraphs at
# empty lines?
texttomaryxml.splitintoparagraphs = true

# How to store the audio data we get from synthesis modules:
# ram = in ram
# file = in file
# auto = if in "low memory condition", in file, else in ram
# (see mary.lowmemory above)
synthesis.audiostore = auto

# Preload the freetts lexicon at system startup?
# - auto: preload if running as server, do not preload otherwise
# - true
# - false
freetts.lexicon.preload = auto

# fallback simple prosody model settings (to support a new language) 
fallback.prosody.tobipredparams = jar:/marytts/modules/prosody/tobipredparams.xml
fallback.prosody.accentPriorities  = jar:/marytts/modules/prosody/POSAccentPriorities.properties
fallback.prosody.paragraphdeclination = true
fallback.prosody.syllableaccents = true



###############

debug.show.cost.graph = false

################################################################
# Test stuff, for testing the property reader
# not needed for normal program execution
test.stream.existant = jar:/marytts/modules/ssml-to-mary.xsl
test.stream.nonexistant = jar:/bla/bla
#Auto-generated config file for voice cmu-slt-hsmm

####################################################################
####################### Module settings  ###########################
####################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.

hmm.voices.list = cmu-slt-hsmm

# If this setting is not present, a default value of 0 is assumed.
voice.cmu-slt-hsmm.wants.to.be.default = 0

# Set your voice specifications
voice.cmu-slt-hsmm.gender = female
voice.cmu-slt-hsmm.locale = en_US
voice.cmu-slt-hsmm.domain = general
voice.cmu-slt-hsmm.samplingRate = 48000
voice.cmu-slt-hsmm.framePeriod = 240

# HMM Voice-specific parameters 
# parameters used during models training 
# MGC: stage=gamma=0 alpha=0.42 16KHz linear gain; alpha=0.55 48Khz log gain (default) 
# LSP: gamma>0  
#          LSP: gamma=1 alpha=0.0  linear gain/log gain 
#      Mel-LSP: gamma=1 alpha=0.42 log gain 
#      MGC-LSP: gamma=3 alpha=0.42 log gain 
voice.cmu-slt-hsmm.alpha = 0.55
voice.cmu-slt-hsmm.gamma = 0
voice.cmu-slt-hsmm.logGain = true

# Parameter beta for postfiltering 
voice.cmu-slt-hsmm.beta = 0.1

# HMM Voice-specific files
# Information about trees
voice.cmu-slt-hsmm.Ftd = jar:/marytts/voice/CmuSltHsmm/tree-dur.inf
voice.cmu-slt-hsmm.Ftf = jar:/marytts/voice/CmuSltHsmm/tree-lf0.inf
voice.cmu-slt-hsmm.Ftm = jar:/marytts/voice/CmuSltHsmm/tree-mgc.inf
voice.cmu-slt-hsmm.Fts = jar:/marytts/voice/CmuSltHsmm/tree-str.inf

# Information about means and variances PDFs 
voice.cmu-slt-hsmm.Fmd = jar:/marytts/voice/CmuSltHsmm/dur.pdf
voice.cmu-slt-hsmm.Fmf = jar:/marytts/voice/CmuSltHsmm/lf0.pdf
voice.cmu-slt-hsmm.Fmm = jar:/marytts/voice/CmuSltHsmm/mgc.pdf
voice.cmu-slt-hsmm.Fms = jar:/marytts/voice/CmuSltHsmm/str.pdf

# Information about Global Mean and Variance PDFs
voice.cmu-slt-hsmm.useGV = true

# Variable for allowing context-dependent GV (without sil)
voice.cmu-slt-hsmm.useContextDependentGV = true

# GV method: gradient or derivative (default gradient)
voice.cmu-slt-hsmm.gvMethod = gradient

# Max number of GV iterations
voice.cmu-slt-hsmm.maxMgcGvIter = 100
voice.cmu-slt-hsmm.maxLf0GvIter = 100
voice.cmu-slt-hsmm.maxStrGvIter = 100

# GV weights for each parameter: between 0.0-2.0
voice.cmu-slt-hsmm.gvweightMgc = 1.0
voice.cmu-slt-hsmm.gvweightLf0 = 1.0
voice.cmu-slt-hsmm.gvweightStr = 1.0

# Mean and variance files for GV
voice.cmu-slt-hsmm.Fgvf = jar:/marytts/voice/CmuSltHsmm/gv-lf0.pdf
voice.cmu-slt-hsmm.Fgvm = jar:/marytts/voice/CmuSltHsmm/gv-mgc.pdf
voice.cmu-slt-hsmm.Fgvs = jar:/marytts/voice/CmuSltHsmm/gv-str.pdf

# A context features file example for start-up testing.
voice.cmu-slt-hsmm.FeaFile = jar:/marytts/voice/CmuSltHsmm/cmu_us_arctic_slt_b0487.pfeats

# Tricky phones file in case there were problematic phones during training, empty otherwise.
voice.cmu-slt-hsmm.trickyPhonesFile = jar:/marytts/voice/CmuSltHsmm/trickyPhones.txt

# Information about Mixed Excitation
voice.cmu-slt-hsmm.useMixExc = true

# Filters for mixed excitation 
# File format: one column with all the taps, where the number of taps per filter = numTaps/numFilters 
voice.cmu-slt-hsmm.Fif = jar:/marytts/voice/CmuSltHsmm/mix_excitation_filters.txt
# Number of filters in bandpass bank
voice.cmu-slt-hsmm.in = 5

# Information about acousticModels (if true allows prosody modification specified in MARYXML input)
voice.cmu-slt-hsmm.useAcousticModels = true

# acoustic models to use (HMM models or carts from other voices can be specified)
#(uncoment to allow prosody modification specified in MARYXML input)
voice.cmu-slt-hsmm.acousticModels = duration F0

voice.cmu-slt-hsmm.duration.model = hmm
# voice.cmu-slt-hsmm.duration.data not used for hmm models
voice.cmu-slt-hsmm.duration.attribute = d

voice.cmu-slt-hsmm.F0.model = hmm
# voice.cmu-slt-hsmm.F0.data not used for hmm models
voice.cmu-slt-hsmm.F0.attribute = f0
